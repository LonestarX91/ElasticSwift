#if !canImport(ObjectiveC)
import XCTest

extension CompoundQueriesTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CompoundQueriesTest = [
        ("testBoolQuery_decode", testBoolQuery_decode),
        ("testBoolQuery_encode", testBoolQuery_encode),
        ("testConstantScoreQuery_decode", testConstantScoreQuery_decode),
        ("testConstantScoreQuery_encode", testConstantScoreQuery_encode),
        ("testFunctionScoreQuery_encode", testFunctionScoreQuery_encode),
    ]
}

extension MatchAllQueryTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MatchAllQueryTests = [
        ("testMatchAllBoost", testMatchAllBoost),
        ("testMatchAllQuery", testMatchAllQuery),
        ("testMatchNonQuery", testMatchNonQuery),
    ]
}

extension ScoreFunctionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScoreFunctionTests = [
        ("testExponentialDecayScoreFunction_decode", testExponentialDecayScoreFunction_decode),
        ("testExponentialDecayScoreFunction_encode", testExponentialDecayScoreFunction_encode),
        ("testFieldValueFactorScoreFunction_decode", testFieldValueFactorScoreFunction_decode),
        ("testFieldValueFactorScoreFunction_encode", testFieldValueFactorScoreFunction_encode),
        ("testGaussDecayScoreFunction_decode", testGaussDecayScoreFunction_decode),
        ("testGaussDecayScoreFunction_encode", testGaussDecayScoreFunction_encode),
        ("testLinearDecayScoreFunction_decode", testLinearDecayScoreFunction_decode),
        ("testLinearDecayScoreFunction_encode", testLinearDecayScoreFunction_encode),
        ("testRandomScoreFunction_decode", testRandomScoreFunction_decode),
        ("testRandomScoreFunction_encode", testRandomScoreFunction_encode),
        ("testScriptScoreFunction_decode", testScriptScoreFunction_decode),
        ("testScriptScoreFunction_encode", testScriptScoreFunction_encode),
        ("testWeightScoreFunction_decode", testWeightScoreFunction_decode),
        ("testWeightScoreFunction_encode", testWeightScoreFunction_encode),
    ]
}

extension ScriptTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTests = [
        ("testScript_decode_short", testScript_decode_short),
        ("testScript_decode", testScript_decode),
        ("testScript_encode_short", testScript_encode_short),
        ("testScript_encode", testScript_encode),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CompoundQueriesTest.__allTests__CompoundQueriesTest),
        testCase(MatchAllQueryTests.__allTests__MatchAllQueryTests),
        testCase(ScoreFunctionTests.__allTests__ScoreFunctionTests),
        testCase(ScriptTests.__allTests__ScriptTests),
    ]
}
#endif
